# this is an auto generated file. This will be overwritten
query SyncDistilleries(
  $filter: ModelDistilleryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDistilleries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      dspID
      users
      batches {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetDistillery($id: ID!) {
  getDistillery(id: $id) {
    id
    name
    dspID
    users
    batches {
      items {
        id
        distilleryID
        batchIdentifier
        batchNumber
        status
        type
        completedAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListDistillerys(
  $filter: ModelDistilleryFilterInput
  $limit: Int
  $nextToken: String
) {
  listDistillerys(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      dspID
      users
      batches {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query SyncBatches(
  $filter: ModelBatchFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBatches(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      distilleryID
      batchIdentifier
      batchNumber
      status
      type
      completedAt
      createdAt
      updatedAt
      distillery {
        id
        name
        dspID
        users
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      measurements {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetBatch($id: ID!) {
  getBatch(id: $id) {
    id
    distilleryID
    batchIdentifier
    batchNumber
    status
    type
    completedAt
    createdAt
    updatedAt
    distillery {
      id
      name
      dspID
      users
      batches {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    measurements {
      items {
        id
        batchID
        trueProof
        temperature
        hydrometer
        temperatureCorrection
        hydrometerCorrection
        note
        flag
        takenAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBatchs(
  $filter: ModelBatchFilterInput
  $limit: Int
  $nextToken: String
) {
  listBatchs(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      distilleryID
      batchIdentifier
      batchNumber
      status
      type
      completedAt
      createdAt
      updatedAt
      distillery {
        id
        name
        dspID
        users
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      measurements {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncMeasurements(
  $filter: ModelMeasurementFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncMeasurements(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      batchID
      trueProof
      temperature
      hydrometer
      temperatureCorrection
      hydrometerCorrection
      note
      flag
      takenAt
      createdAt
      updatedAt
      batch {
        id
        distilleryID
        batchIdentifier
        batchNumber
        status
        type
        completedAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetMeasurement($id: ID!) {
  getMeasurement(id: $id) {
    id
    batchID
    trueProof
    temperature
    hydrometer
    temperatureCorrection
    hydrometerCorrection
    note
    flag
    takenAt
    createdAt
    updatedAt
    batch {
      id
      distilleryID
      batchIdentifier
      batchNumber
      status
      type
      completedAt
      createdAt
      updatedAt
      distillery {
        id
        name
        dspID
        users
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      measurements {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    _version
    _deleted
    _lastChangedAt
  }
}
query ListMeasurements(
  $filter: ModelMeasurementFilterInput
  $limit: Int
  $nextToken: String
) {
  listMeasurements(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      batchID
      trueProof
      temperature
      hydrometer
      temperatureCorrection
      hydrometerCorrection
      note
      flag
      takenAt
      createdAt
      updatedAt
      batch {
        id
        distilleryID
        batchIdentifier
        batchNumber
        status
        type
        completedAt
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      email
      defaultTemperatureUnit
      defaultTemperatureCorrection
      defaultHydrometerCorrection
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    email
    defaultTemperatureUnit
    defaultTemperatureCorrection
    defaultHydrometerCorrection
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      email
      defaultTemperatureUnit
      defaultTemperatureCorrection
      defaultHydrometerCorrection
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    nextToken
    startedAt
  }
}
